const EVENT_TYPES = {
    CRITICAL: 'CRITICAL',
    ERROR: 'ERROR',
    WARNING: 'WARNING',
    INFO: 'INFO',
    SUCCESS: 'SUCCESS',
    ATTACK: 'ATTACK',
    INTRUSION: 'INTRUSION',
    DEVICE_OFFLINE: 'DEVICE_OFFLINE',
    DEVICE_ONLINE: 'DEVICE_ONLINE',
    CLIENT_CONNECTED: 'CLIENT_CONNECTED',
    CLIENT_DISCONNECTED: 'CLIENT_DISCONNECTED',
    FIRMWARE_UPDATE: 'FIRMWARE_UPDATE',
    CONFIG_CHANGE: 'CONFIG_CHANGE',
    DEFAULT: 'DEFAULT',
    DHCP: 'DHCP',
    LOGS: 'LOGS',
    LOGGED_IN_OUT: 'LOGGED_IN_OUT',
    TEST: 'TEST',
    BANDWIDTH_LIMIT: 'BANDWIDTH_LIMIT',
    AUTHENTICATION_FAILURE: 'AUTHENTICATION_FAILURE',
};

const EVENT_TITLES = {
    [EVENT_TYPES.ATTACK]: 'üö® Attack Detected',
    [EVENT_TYPES.INTRUSION]: 'üö® Intrusion Detected',
    [EVENT_TYPES.DEVICE_OFFLINE]: 'üì¥ Device Offline',
    [EVENT_TYPES.DEVICE_ONLINE]: 'üì∂ Device Online',
    [EVENT_TYPES.CLIENT_CONNECTED]: '‚úÖ Client Connected',
    [EVENT_TYPES.CLIENT_DISCONNECTED]: '‚ùå Client Disconnected',
    [EVENT_TYPES.FIRMWARE_UPDATE]: 'üîÑ Firmware Update',
    [EVENT_TYPES.CONFIG_CHANGE]: '‚öôÔ∏è Configuration Change',
    [EVENT_TYPES.DHCP]: 'üñ•Ô∏è DHCP',
    [EVENT_TYPES.LOGS]: 'üìÉ Logs',
    [EVENT_TYPES.BANDWIDTH_LIMIT]: '‚ö†Ô∏è Bandwidth Limit Exceeded',
    [EVENT_TYPES.AUTHENTICATION_FAILURE]: 'üîê Authentication Failure',
    [EVENT_TYPES.LOGGED_IN_OUT]: 'üë§ Logged In/Out',
    [EVENT_TYPES.TEST]: 'üß™ Test',
    [EVENT_TYPES.DEFAULT]: 'üì¢ Omada Alert',
};

const EVENT_TYPES_MAP = [
    { regex: /attack/i, type: EVENT_TYPES.ATTACK },
    { regex: /flood/i, type: EVENT_TYPES.ATTACK },
    { regex: /intrusion/i, type: EVENT_TYPES.INTRUSION },
    { regex: /error|failed/i, type: EVENT_TYPES.ERROR },
    { regex: /dhcp/i, type: EVENT_TYPES.DHCP },
    { regex: /logs/i, type: EVENT_TYPES.LOGS },
    { regex: /logged (?:out|in)/i, type: EVENT_TYPES.LOGGED_IN_OUT },
    { regex: /success/i, type: EVENT_TYPES.SUCCESS },
    { regex: /test/i, type: EVENT_TYPES.TEST },
    { regex: /device offline/i, type: EVENT_TYPES.DEVICE_OFFLINE },
    { regex: /device online/i, type: EVENT_TYPES.DEVICE_ONLINE },
    { regex: /client connected/i, type: EVENT_TYPES.CLIENT_CONNECTED },
    { regex: /client disconnected/i, type: EVENT_TYPES.CLIENT_DISCONNECTED },
    { regex: /firmware update/i, type: EVENT_TYPES.FIRMWARE_UPDATE },
    { regex: /configuration change/i, type: EVENT_TYPES.CONFIG_CHANGE },
    { regex: /bandwidth limit exceeded/i, type: EVENT_TYPES.BANDWIDTH_LIMIT },
    { regex: /authentication failure/i, type: EVENT_TYPES.AUTHENTICATION_FAILURE },
];

module.exports = {
    EVENT_TYPES,
    EVENT_TITLES,
    EVENT_TYPES_MAP,
}